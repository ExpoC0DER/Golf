//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/_game/Scripts/Controls/PlayerControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerControls: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerControls"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""82b7262e-d633-40cc-9e14-a167229effa0"",
            ""actions"": [
                {
                    ""name"": ""Look"",
                    ""type"": ""PassThrough"",
                    ""id"": ""8eddd4b9-ebd8-4666-8864-bd53b2a5e3d4"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ZoomScroll"",
                    ""type"": ""PassThrough"",
                    ""id"": ""05d631e7-f334-4418-a315-6f43caca573b"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Aiming"",
                    ""type"": ""PassThrough"",
                    ""id"": ""de23e9cd-5f83-4f29-8f8a-3add92b47e8e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Hold(pressPoint=1.401298E-45)"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CancelAiming"",
                    ""type"": ""Button"",
                    ""id"": ""49e85e7f-a4e6-43bf-a74c-21499c1ef9cd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Zooming"",
                    ""type"": ""Button"",
                    ""id"": ""f30bbf22-c742-4779-9351-17d28e75d626"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MousePosition"",
                    ""type"": ""PassThrough"",
                    ""id"": ""a849428b-af73-4100-8883-fc9b7e60da4b"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""VirtualMouseJoystick"",
                    ""type"": ""PassThrough"",
                    ""id"": ""1924e54a-0d5b-4dea-8412-ef85567bf9c4"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""5d24e1a5-5a7f-4bad-9391-487b7db05e2d"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardAndMouse"",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""708fc12d-cea8-4bce-8d63-ac4d39f6337f"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b3aaa818-250c-4be6-aa79-f11f083c29d2"",
                    ""path"": ""<Mouse>/scroll/y"",
                    ""interactions"": """",
                    ""processors"": ""Invert,Clamp(min=-1,max=1)"",
                    ""groups"": ""KeyboardAndMouse"",
                    ""action"": ""ZoomScroll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2cb9c70d-dd2a-4dbd-a1b5-ee01b90f0df8"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardAndMouse"",
                    ""action"": ""Aiming"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""91d8384c-d96d-4d70-8b12-5c388f5a8708"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Aiming"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2f58c166-b9e1-4947-87e4-a2960b1b50a9"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardAndMouse"",
                    ""action"": ""CancelAiming"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""221b4fa2-09f5-410f-9915-6912f00e5ec8"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""CancelAiming"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""367aa7be-7d06-4b51-9f45-52599bf44501"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Zooming"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""04ffc230-556e-4976-bf4a-e14884b254fa"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Zooming"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""92f2579a-5bac-46da-bf95-1302880418eb"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Zooming"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""4c33bf4d-b894-4eda-a166-bc496d5187f7"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardAndMouse"",
                    ""action"": ""MousePosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4e5228fc-219c-4e4b-ba5c-ac4e22cf2927"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""VirtualMouseJoystick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Build"",
            ""id"": ""310f7cbc-a179-48f2-94ee-aea26510f0bb"",
            ""actions"": [
                {
                    ""name"": ""LeftClick"",
                    ""type"": ""Button"",
                    ""id"": ""38d1fd7e-0ac5-4026-b39c-62a3ceb57978"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Rotate"",
                    ""type"": ""PassThrough"",
                    ""id"": ""7ea7e919-1cc5-485d-89b1-335614ed3b86"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Zooming"",
                    ""type"": ""Button"",
                    ""id"": ""e3969a3a-ed50-4333-a318-516590c39ff7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""OnZoomScroll"",
                    ""type"": ""PassThrough"",
                    ""id"": ""e873b852-73e7-4f83-8602-a71fdd004dda"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MoveCamera"",
                    ""type"": ""PassThrough"",
                    ""id"": ""4c7de15f-de18-48a2-8a5e-04fb482219c4"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SwitchSpectatingPlayer"",
                    ""type"": ""Button"",
                    ""id"": ""96ca72f5-e2a8-47b5-85fa-290c5a32c294"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""IterateSpectatingPlayer"",
                    ""type"": ""Button"",
                    ""id"": ""607ab84c-aa60-4a96-8557-621ed825d3ad"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MousePosition"",
                    ""type"": ""PassThrough"",
                    ""id"": ""66097615-f2fe-49cb-91f8-d66c248e8ba9"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""VirtualMouseJoystick"",
                    ""type"": ""PassThrough"",
                    ""id"": ""21dffbce-eec1-4b99-9e03-b2fedbbb4390"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""5b0eda65-9851-4d39-9ea4-8d02c1e04cf1"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardAndMouse"",
                    ""action"": ""LeftClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""df2ee4a5-495d-4eed-9283-68eeeac87ded"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""LeftClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""2f916633-2234-44cb-9c3c-88938376cfe9"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""6a9498ab-189f-44d3-a9a9-c77c7c1d3384"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardAndMouse"",
                    ""action"": ""Rotate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""47356dc6-35d8-4674-94e6-e153f06a92c5"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardAndMouse"",
                    ""action"": ""Rotate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""23745a93-17ad-4594-9022-cb580b70a186"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""64cf17d8-62f8-45c1-811b-5b451863ac01"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Rotate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""115959d6-3b06-469e-a6b7-8ab627f6175e"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Rotate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""3e7bff1d-cae9-4270-80bf-2cfeed40a732"",
                    ""path"": ""<Mouse>/scroll/y"",
                    ""interactions"": """",
                    ""processors"": ""Invert,Clamp(min=-1,max=1),Scale"",
                    ""groups"": ""KeyboardAndMouse"",
                    ""action"": ""OnZoomScroll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""d02b94ef-223b-4dd4-aeec-bcd9cb237c16"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveCamera"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Up"",
                    ""id"": ""f22c88c1-2477-4a5d-81d0-ca3cf2d7b931"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardAndMouse"",
                    ""action"": ""MoveCamera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Down"",
                    ""id"": ""effaef4c-c975-45c7-b3b6-10e2b2efeaf8"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardAndMouse"",
                    ""action"": ""MoveCamera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Left"",
                    ""id"": ""3d047d91-e8e4-49b6-9650-7e7a5945761f"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardAndMouse"",
                    ""action"": ""MoveCamera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Right"",
                    ""id"": ""b6157dca-1b13-471d-92be-1bf2c5377d0b"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardAndMouse"",
                    ""action"": ""MoveCamera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""2b65de3e-8b42-424f-923b-baebaaf63b17"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""MoveCamera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""348e9d54-e62d-42a8-b63e-9d5fdde990c2"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": ""Clamp"",
                    ""groups"": ""KeyboardAndMouse"",
                    ""action"": ""SwitchSpectatingPlayer"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ff3ea331-0d91-4dde-a098-a718e775bd1d"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": ""Clamp(min=1,max=1)"",
                    ""groups"": ""KeyboardAndMouse"",
                    ""action"": ""SwitchSpectatingPlayer"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7f5b0a1a-2a9c-4c68-84c4-e8baf0ea90cf"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": ""Clamp(min=2,max=2)"",
                    ""groups"": ""KeyboardAndMouse"",
                    ""action"": ""SwitchSpectatingPlayer"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8808936c-181f-49cb-a876-ff20f6ade735"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": ""Clamp(min=3,max=3)"",
                    ""groups"": ""KeyboardAndMouse"",
                    ""action"": ""SwitchSpectatingPlayer"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""38ae5c0c-bac1-432a-be2f-ded1d5cbe370"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""IterateSpectatingPlayer"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""ad18538a-5424-4cf9-b37c-846f1d5450d9"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""IterateSpectatingPlayer"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""bd571184-3654-4087-b420-4f882c71a1b2"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""IterateSpectatingPlayer"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""7fc88e67-e31f-4bbe-9816-09f3decb33db"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardAndMouse"",
                    ""action"": ""MousePosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""573445bb-0201-4059-b9af-1d20fabdc944"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""VirtualMouseJoystick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""10acba0e-6527-444e-bc59-2b59e65f575e"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Zooming"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""ac3521f1-963d-45ff-8960-d04d9a60f3bb"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Zooming"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""3cbeb8d5-983a-4c33-8c6c-98f08811e16d"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Zooming"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        },
        {
            ""name"": ""Menu"",
            ""id"": ""522335f1-7eeb-4266-ac33-12972998af31"",
            ""actions"": [
                {
                    ""name"": ""StartGame"",
                    ""type"": ""Button"",
                    ""id"": ""1436adbc-adff-4c21-908c-357238079a66"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PlayerJoin"",
                    ""type"": ""Button"",
                    ""id"": ""62da7c54-e2e8-4201-af26-e0f34b30ff47"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""df391ee2-a3d5-46cc-b615-ad1e5b607f04"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""StartGame"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""65a029b3-36bd-4aaa-82e6-624a6009b06d"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""PlayerJoin"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""905ec30e-05de-457a-8409-ec42a570bd7c"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardAndMouse"",
                    ""action"": ""PlayerJoin"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""KeyboardAndMouse"",
            ""bindingGroup"": ""KeyboardAndMouse"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Controller"",
            ""bindingGroup"": ""Controller"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_Look = m_Player.FindAction("Look", throwIfNotFound: true);
        m_Player_ZoomScroll = m_Player.FindAction("ZoomScroll", throwIfNotFound: true);
        m_Player_Aiming = m_Player.FindAction("Aiming", throwIfNotFound: true);
        m_Player_CancelAiming = m_Player.FindAction("CancelAiming", throwIfNotFound: true);
        m_Player_Zooming = m_Player.FindAction("Zooming", throwIfNotFound: true);
        m_Player_MousePosition = m_Player.FindAction("MousePosition", throwIfNotFound: true);
        m_Player_VirtualMouseJoystick = m_Player.FindAction("VirtualMouseJoystick", throwIfNotFound: true);
        // Build
        m_Build = asset.FindActionMap("Build", throwIfNotFound: true);
        m_Build_LeftClick = m_Build.FindAction("LeftClick", throwIfNotFound: true);
        m_Build_Rotate = m_Build.FindAction("Rotate", throwIfNotFound: true);
        m_Build_Zooming = m_Build.FindAction("Zooming", throwIfNotFound: true);
        m_Build_OnZoomScroll = m_Build.FindAction("OnZoomScroll", throwIfNotFound: true);
        m_Build_MoveCamera = m_Build.FindAction("MoveCamera", throwIfNotFound: true);
        m_Build_SwitchSpectatingPlayer = m_Build.FindAction("SwitchSpectatingPlayer", throwIfNotFound: true);
        m_Build_IterateSpectatingPlayer = m_Build.FindAction("IterateSpectatingPlayer", throwIfNotFound: true);
        m_Build_MousePosition = m_Build.FindAction("MousePosition", throwIfNotFound: true);
        m_Build_VirtualMouseJoystick = m_Build.FindAction("VirtualMouseJoystick", throwIfNotFound: true);
        // Menu
        m_Menu = asset.FindActionMap("Menu", throwIfNotFound: true);
        m_Menu_StartGame = m_Menu.FindAction("StartGame", throwIfNotFound: true);
        m_Menu_PlayerJoin = m_Menu.FindAction("PlayerJoin", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private List<IPlayerActions> m_PlayerActionsCallbackInterfaces = new List<IPlayerActions>();
    private readonly InputAction m_Player_Look;
    private readonly InputAction m_Player_ZoomScroll;
    private readonly InputAction m_Player_Aiming;
    private readonly InputAction m_Player_CancelAiming;
    private readonly InputAction m_Player_Zooming;
    private readonly InputAction m_Player_MousePosition;
    private readonly InputAction m_Player_VirtualMouseJoystick;
    public struct PlayerActions
    {
        private @PlayerControls m_Wrapper;
        public PlayerActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Look => m_Wrapper.m_Player_Look;
        public InputAction @ZoomScroll => m_Wrapper.m_Player_ZoomScroll;
        public InputAction @Aiming => m_Wrapper.m_Player_Aiming;
        public InputAction @CancelAiming => m_Wrapper.m_Player_CancelAiming;
        public InputAction @Zooming => m_Wrapper.m_Player_Zooming;
        public InputAction @MousePosition => m_Wrapper.m_Player_MousePosition;
        public InputAction @VirtualMouseJoystick => m_Wrapper.m_Player_VirtualMouseJoystick;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Add(instance);
            @Look.started += instance.OnLook;
            @Look.performed += instance.OnLook;
            @Look.canceled += instance.OnLook;
            @ZoomScroll.started += instance.OnZoomScroll;
            @ZoomScroll.performed += instance.OnZoomScroll;
            @ZoomScroll.canceled += instance.OnZoomScroll;
            @Aiming.started += instance.OnAiming;
            @Aiming.performed += instance.OnAiming;
            @Aiming.canceled += instance.OnAiming;
            @CancelAiming.started += instance.OnCancelAiming;
            @CancelAiming.performed += instance.OnCancelAiming;
            @CancelAiming.canceled += instance.OnCancelAiming;
            @Zooming.started += instance.OnZooming;
            @Zooming.performed += instance.OnZooming;
            @Zooming.canceled += instance.OnZooming;
            @MousePosition.started += instance.OnMousePosition;
            @MousePosition.performed += instance.OnMousePosition;
            @MousePosition.canceled += instance.OnMousePosition;
            @VirtualMouseJoystick.started += instance.OnVirtualMouseJoystick;
            @VirtualMouseJoystick.performed += instance.OnVirtualMouseJoystick;
            @VirtualMouseJoystick.canceled += instance.OnVirtualMouseJoystick;
        }

        private void UnregisterCallbacks(IPlayerActions instance)
        {
            @Look.started -= instance.OnLook;
            @Look.performed -= instance.OnLook;
            @Look.canceled -= instance.OnLook;
            @ZoomScroll.started -= instance.OnZoomScroll;
            @ZoomScroll.performed -= instance.OnZoomScroll;
            @ZoomScroll.canceled -= instance.OnZoomScroll;
            @Aiming.started -= instance.OnAiming;
            @Aiming.performed -= instance.OnAiming;
            @Aiming.canceled -= instance.OnAiming;
            @CancelAiming.started -= instance.OnCancelAiming;
            @CancelAiming.performed -= instance.OnCancelAiming;
            @CancelAiming.canceled -= instance.OnCancelAiming;
            @Zooming.started -= instance.OnZooming;
            @Zooming.performed -= instance.OnZooming;
            @Zooming.canceled -= instance.OnZooming;
            @MousePosition.started -= instance.OnMousePosition;
            @MousePosition.performed -= instance.OnMousePosition;
            @MousePosition.canceled -= instance.OnMousePosition;
            @VirtualMouseJoystick.started -= instance.OnVirtualMouseJoystick;
            @VirtualMouseJoystick.performed -= instance.OnVirtualMouseJoystick;
            @VirtualMouseJoystick.canceled -= instance.OnVirtualMouseJoystick;
        }

        public void RemoveCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerActions @Player => new PlayerActions(this);

    // Build
    private readonly InputActionMap m_Build;
    private List<IBuildActions> m_BuildActionsCallbackInterfaces = new List<IBuildActions>();
    private readonly InputAction m_Build_LeftClick;
    private readonly InputAction m_Build_Rotate;
    private readonly InputAction m_Build_Zooming;
    private readonly InputAction m_Build_OnZoomScroll;
    private readonly InputAction m_Build_MoveCamera;
    private readonly InputAction m_Build_SwitchSpectatingPlayer;
    private readonly InputAction m_Build_IterateSpectatingPlayer;
    private readonly InputAction m_Build_MousePosition;
    private readonly InputAction m_Build_VirtualMouseJoystick;
    public struct BuildActions
    {
        private @PlayerControls m_Wrapper;
        public BuildActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @LeftClick => m_Wrapper.m_Build_LeftClick;
        public InputAction @Rotate => m_Wrapper.m_Build_Rotate;
        public InputAction @Zooming => m_Wrapper.m_Build_Zooming;
        public InputAction @OnZoomScroll => m_Wrapper.m_Build_OnZoomScroll;
        public InputAction @MoveCamera => m_Wrapper.m_Build_MoveCamera;
        public InputAction @SwitchSpectatingPlayer => m_Wrapper.m_Build_SwitchSpectatingPlayer;
        public InputAction @IterateSpectatingPlayer => m_Wrapper.m_Build_IterateSpectatingPlayer;
        public InputAction @MousePosition => m_Wrapper.m_Build_MousePosition;
        public InputAction @VirtualMouseJoystick => m_Wrapper.m_Build_VirtualMouseJoystick;
        public InputActionMap Get() { return m_Wrapper.m_Build; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(BuildActions set) { return set.Get(); }
        public void AddCallbacks(IBuildActions instance)
        {
            if (instance == null || m_Wrapper.m_BuildActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_BuildActionsCallbackInterfaces.Add(instance);
            @LeftClick.started += instance.OnLeftClick;
            @LeftClick.performed += instance.OnLeftClick;
            @LeftClick.canceled += instance.OnLeftClick;
            @Rotate.started += instance.OnRotate;
            @Rotate.performed += instance.OnRotate;
            @Rotate.canceled += instance.OnRotate;
            @Zooming.started += instance.OnZooming;
            @Zooming.performed += instance.OnZooming;
            @Zooming.canceled += instance.OnZooming;
            @OnZoomScroll.started += instance.OnOnZoomScroll;
            @OnZoomScroll.performed += instance.OnOnZoomScroll;
            @OnZoomScroll.canceled += instance.OnOnZoomScroll;
            @MoveCamera.started += instance.OnMoveCamera;
            @MoveCamera.performed += instance.OnMoveCamera;
            @MoveCamera.canceled += instance.OnMoveCamera;
            @SwitchSpectatingPlayer.started += instance.OnSwitchSpectatingPlayer;
            @SwitchSpectatingPlayer.performed += instance.OnSwitchSpectatingPlayer;
            @SwitchSpectatingPlayer.canceled += instance.OnSwitchSpectatingPlayer;
            @IterateSpectatingPlayer.started += instance.OnIterateSpectatingPlayer;
            @IterateSpectatingPlayer.performed += instance.OnIterateSpectatingPlayer;
            @IterateSpectatingPlayer.canceled += instance.OnIterateSpectatingPlayer;
            @MousePosition.started += instance.OnMousePosition;
            @MousePosition.performed += instance.OnMousePosition;
            @MousePosition.canceled += instance.OnMousePosition;
            @VirtualMouseJoystick.started += instance.OnVirtualMouseJoystick;
            @VirtualMouseJoystick.performed += instance.OnVirtualMouseJoystick;
            @VirtualMouseJoystick.canceled += instance.OnVirtualMouseJoystick;
        }

        private void UnregisterCallbacks(IBuildActions instance)
        {
            @LeftClick.started -= instance.OnLeftClick;
            @LeftClick.performed -= instance.OnLeftClick;
            @LeftClick.canceled -= instance.OnLeftClick;
            @Rotate.started -= instance.OnRotate;
            @Rotate.performed -= instance.OnRotate;
            @Rotate.canceled -= instance.OnRotate;
            @Zooming.started -= instance.OnZooming;
            @Zooming.performed -= instance.OnZooming;
            @Zooming.canceled -= instance.OnZooming;
            @OnZoomScroll.started -= instance.OnOnZoomScroll;
            @OnZoomScroll.performed -= instance.OnOnZoomScroll;
            @OnZoomScroll.canceled -= instance.OnOnZoomScroll;
            @MoveCamera.started -= instance.OnMoveCamera;
            @MoveCamera.performed -= instance.OnMoveCamera;
            @MoveCamera.canceled -= instance.OnMoveCamera;
            @SwitchSpectatingPlayer.started -= instance.OnSwitchSpectatingPlayer;
            @SwitchSpectatingPlayer.performed -= instance.OnSwitchSpectatingPlayer;
            @SwitchSpectatingPlayer.canceled -= instance.OnSwitchSpectatingPlayer;
            @IterateSpectatingPlayer.started -= instance.OnIterateSpectatingPlayer;
            @IterateSpectatingPlayer.performed -= instance.OnIterateSpectatingPlayer;
            @IterateSpectatingPlayer.canceled -= instance.OnIterateSpectatingPlayer;
            @MousePosition.started -= instance.OnMousePosition;
            @MousePosition.performed -= instance.OnMousePosition;
            @MousePosition.canceled -= instance.OnMousePosition;
            @VirtualMouseJoystick.started -= instance.OnVirtualMouseJoystick;
            @VirtualMouseJoystick.performed -= instance.OnVirtualMouseJoystick;
            @VirtualMouseJoystick.canceled -= instance.OnVirtualMouseJoystick;
        }

        public void RemoveCallbacks(IBuildActions instance)
        {
            if (m_Wrapper.m_BuildActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IBuildActions instance)
        {
            foreach (var item in m_Wrapper.m_BuildActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_BuildActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public BuildActions @Build => new BuildActions(this);

    // Menu
    private readonly InputActionMap m_Menu;
    private List<IMenuActions> m_MenuActionsCallbackInterfaces = new List<IMenuActions>();
    private readonly InputAction m_Menu_StartGame;
    private readonly InputAction m_Menu_PlayerJoin;
    public struct MenuActions
    {
        private @PlayerControls m_Wrapper;
        public MenuActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @StartGame => m_Wrapper.m_Menu_StartGame;
        public InputAction @PlayerJoin => m_Wrapper.m_Menu_PlayerJoin;
        public InputActionMap Get() { return m_Wrapper.m_Menu; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MenuActions set) { return set.Get(); }
        public void AddCallbacks(IMenuActions instance)
        {
            if (instance == null || m_Wrapper.m_MenuActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_MenuActionsCallbackInterfaces.Add(instance);
            @StartGame.started += instance.OnStartGame;
            @StartGame.performed += instance.OnStartGame;
            @StartGame.canceled += instance.OnStartGame;
            @PlayerJoin.started += instance.OnPlayerJoin;
            @PlayerJoin.performed += instance.OnPlayerJoin;
            @PlayerJoin.canceled += instance.OnPlayerJoin;
        }

        private void UnregisterCallbacks(IMenuActions instance)
        {
            @StartGame.started -= instance.OnStartGame;
            @StartGame.performed -= instance.OnStartGame;
            @StartGame.canceled -= instance.OnStartGame;
            @PlayerJoin.started -= instance.OnPlayerJoin;
            @PlayerJoin.performed -= instance.OnPlayerJoin;
            @PlayerJoin.canceled -= instance.OnPlayerJoin;
        }

        public void RemoveCallbacks(IMenuActions instance)
        {
            if (m_Wrapper.m_MenuActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IMenuActions instance)
        {
            foreach (var item in m_Wrapper.m_MenuActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_MenuActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public MenuActions @Menu => new MenuActions(this);
    private int m_KeyboardAndMouseSchemeIndex = -1;
    public InputControlScheme KeyboardAndMouseScheme
    {
        get
        {
            if (m_KeyboardAndMouseSchemeIndex == -1) m_KeyboardAndMouseSchemeIndex = asset.FindControlSchemeIndex("KeyboardAndMouse");
            return asset.controlSchemes[m_KeyboardAndMouseSchemeIndex];
        }
    }
    private int m_ControllerSchemeIndex = -1;
    public InputControlScheme ControllerScheme
    {
        get
        {
            if (m_ControllerSchemeIndex == -1) m_ControllerSchemeIndex = asset.FindControlSchemeIndex("Controller");
            return asset.controlSchemes[m_ControllerSchemeIndex];
        }
    }
    public interface IPlayerActions
    {
        void OnLook(InputAction.CallbackContext context);
        void OnZoomScroll(InputAction.CallbackContext context);
        void OnAiming(InputAction.CallbackContext context);
        void OnCancelAiming(InputAction.CallbackContext context);
        void OnZooming(InputAction.CallbackContext context);
        void OnMousePosition(InputAction.CallbackContext context);
        void OnVirtualMouseJoystick(InputAction.CallbackContext context);
    }
    public interface IBuildActions
    {
        void OnLeftClick(InputAction.CallbackContext context);
        void OnRotate(InputAction.CallbackContext context);
        void OnZooming(InputAction.CallbackContext context);
        void OnOnZoomScroll(InputAction.CallbackContext context);
        void OnMoveCamera(InputAction.CallbackContext context);
        void OnSwitchSpectatingPlayer(InputAction.CallbackContext context);
        void OnIterateSpectatingPlayer(InputAction.CallbackContext context);
        void OnMousePosition(InputAction.CallbackContext context);
        void OnVirtualMouseJoystick(InputAction.CallbackContext context);
    }
    public interface IMenuActions
    {
        void OnStartGame(InputAction.CallbackContext context);
        void OnPlayerJoin(InputAction.CallbackContext context);
    }
}
